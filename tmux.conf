##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set up 'v' to begin selection as in Vim; y to copy, p to paste
# the syntax for this changed in a recent version of tmux: see
# https://github.com/tmux/tmux/issues/754
unbind p
bind p paste-buffer
unbind-key -T copy-mode-vi v # unbind default text selection so C-v works
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# y also copies info to the clipboard
# only works on linux with X - requires xclip
bind -T copy-mode-vi 'y' send-keys -X copy-pipe "xclip -sel clip -i"

# use copy-pipe on OSX
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# (obscenely) large history
set-option -g history-limit 1000000

# nice colors - also requires that $TERM be set to (xterm|screen)-256color
setw -g mode-style bg=black
set-option -g default-terminal  "screen-256color"
set-option -g pane-active-border-style fg=green

# set highlighting background color to orange
setw -g mode-style fg="#000000"
setw -g mode-style bg="#FD870D"

# for vim
setw -g xterm-keys on 
# notify about activity at the bottom of the screen
setw -g monitor-activity on
# current window format
setw -g window-status-current-format '#[fg=white,attr=reverse]'

# Automatically set window title
setw -g automatic-rename

# use mouse to select pane, text
set -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

############################################################################
# Status Bar
############################################################################
set-option -g status-justify right
set-option -g status-style bg=black # colour213 # pink
set-option -g status-style fg=cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
unbind Space


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf


############################################################################
# windows
############################################################################
set-window-option -g window-status-current-style bg=red

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, even if both clients are looking at
# different windows. Comment this out for Mac.
setw -g aggressive-resize off

# Space to cycle between pane layouts
bind-key Space next-layout

# + to join window into current as pane
# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
bind-key + command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H]

############################################################################
# panes
############################################################################
# use Alt-| and Alt-- to arrange panes in even horizontal/vertical panels
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"

# new split in current window (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \\ split-window -h # split pane vertically

# use Alt-r to rotate panes
bind M-r rotate-window

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-move-vi C-h select-pane -L
bind-key -T copy-move-vi C-j select-pane -D
bind-key -T copy-move-vi C-k select-pane -U
bind-key -T copy-move-vi C-l select-pane -R
bind-key -T copy-move-vi C-\\ select-pane -l

# Under tmux prefix, same keys do resizing
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R
